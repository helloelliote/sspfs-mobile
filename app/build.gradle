import java.util.regex.Pattern

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

apply plugin: 'androidx.navigation.safeargs.kotlin'

/**
 * Extract Git commit hash of HEAD with number of changed files
 * @link https://gist.github.com/ericksli/1c71ae055ea90fdfdae41ceaebe072cb
 */
def getGitHashVersionName = {
    try {
        def hashOutput = new ByteArrayOutputStream()
        def changeOutput = new ByteArrayOutputStream()
        def gitVersionName
        exec {
            commandLine 'git', 'rev-list', '--max-count=1', 'HEAD'
            standardOutput = hashOutput
        }
        exec {
            commandLine 'git', 'diff-index', '--shortstat', 'HEAD'
            standardOutput = changeOutput
        }
        gitVersionName = hashOutput.toString().trim().substring(0, 7);
        if (!changeOutput.toString().trim().empty) {
            def pattern = Pattern.compile("\\d+");
            def matcher = pattern.matcher(changeOutput.toString().trim())
            if (matcher.find()) {
                gitVersionName
            }
        }
        return gitVersionName
    } catch (ignored) {
        return "UNKNOWN";
    }
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "kr.djgis.sspfs"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "GIT_VERSION_NAME", "\"${getGitHashVersionName()}\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    // Configure only for each module that uses Java 8
    // language features (either in its source code or
    // through dependencies).
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    implementation "androidx.core:core-ktx:1.8.0"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Naver Maps
    implementation 'com.naver.maps:map-sdk:3.15.0'
    implementation 'com.google.android.gms:play-services-location:20.0.0'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6'

    // square: moshi & sqldelight
    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // debugImplementation because LeakCanary should only run in debug builds.
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
}
repositories {
    mavenCentral()
}
